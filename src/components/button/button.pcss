
h1 {
  color: var(--mu-primary-color);
}

.mu-button {
  position: relative;
  display: inline-block;
  height: $inputElementHeight;
  padding: 0 $inputElementPaddingX;
  outline: none;
  border: 1px solid $normalBorderColor;
  border-radius: $inputElementBorderRadius;
  line-height: 1;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  background: $normalBackground;
  /* vertical-align: middle; */
  font-size: $buttonFontSize;
  text-decoration: none;
  text-align: center;
  color: $normalTextColor;
  cursor: pointer;
  box-shadow: $buttonShadow $normalGreyBackground;

  /* & > .mu-icon {
    line-height: 0;
  }

  &::before {
    display: inline-block;
    float: left;
    width: 0;
    content: '\00a0';
  } */

  &[button-style="link"] {
    padding-left: 0;
    padding-right: 0;
    box-shadow: none !important;
  }

  &[active] {
    border-color: var(--mu-primary-plus-color);
    background: var(--mu-primary-tiny-color);
    box-shadow: $buttonActiveShadow var(--mu-primary-shadow-color);
    color: var(--mu-primary-plus-color);
  }

  &:hover,
  &[button-style="text"]:hover {
    border-color: var(--mu-primary-minus-color);
    color: var(--mu-primary-minus-color);
    box-shadow: $buttonHoverShadow var(--mu-primary-shadow-color);
  }

  &[button-type="primary"] {
    color: $normalHighlightTextColor;
    box-shadow: $buttonShadow var(--mu-primary-shadow-color);

    @if $buttonGradient {
      border-color: var(--mu-primary-minus-color);
      background: linear-gradient(to bottom, var(--mu-primary-minus-color), var(--mu-primary-plus-color));;
    }
    @else {
      border-color: var(--mu-primary-color);
      background: var(--mu-primary-color);
    }

    &[active] {
      background: var(--mu-primary-plus-color);
      border-color: var(--mu-primary-plus-color);
      box-shadow: $buttonActiveShadow var(--mu-primary-shadow-color);
    }

    &:hover {
      background: var(--mu-primary-minus-color);
      border-color: var(--mu-primary-minus-color);
      box-shadow: $buttonHoverShadow var(--mu-primary-shadow-color);
      color: $normalHighlightTextColor;
    }

    &[button-style="link"],
    &[button-style="text"],
    &[button-style="outline"] {
      color: var(--mu-primary-color);

      &[active] {
        color: var(--mu-primary-plus-color);
        background: var(--mu-primary-tiny-color);
      }

      &:hover {
        color: var(--mu-primary-minus-color);
      }
    }
  }

  &[button-type="submit"] {
    color: $normalHighlightTextColor;
    box-shadow: $buttonShadow var(--mu-success-shadow-color);

    @if $buttonGradient {
      border-color: var(--mu-success-minus-color);
      background: linear-gradient(to bottom, var(--mu-success-minus-color), var(--mu-success-plus-color));
    }
    @else {
      border-color: var(--mu-success-color);
      background: var(--mu-success-color);
    }

    &[active] {
      background: var(--mu-success-plus-color);
      border-color: var(--mu-success-plus-color);
      box-shadow: $buttonActiveShadow var(--mu-success-shadow-color);
    }

    &:hover {
      background: var(--mu-success-minus-color);
      border-color: var(--mu-success-minus-color);
      box-shadow: $buttonHoverShadow var(--mu-success-shadow-color);
      color: $normalHighlightTextColor;
    }

    &[button-style="link"],
    &[button-style="text"],
    &[button-style="outline"] {
      color: var(--mu-success-color);

      &[active] {
        color: var(--mu-success-plus-color);
        background: var(--mu-success-tiny-color);
      }

      &:hover {
        color: var(--mu-success-minus-color);
      }
    }
  }

  &[button-type="danger"] {
    color: $normalHighlightTextColor;
    box-shadow: $buttonShadow var(--mu-danger-shadow-color);

    @if $buttonGradient {
      border-color: var(--mu-danger-minus-color);
      background: linear-gradient(to bottom, var(--mu-danger-minus-color), var(--mu-danger-plus-color));
    }
    @else {
      border-color: var(--mu-danger-color);
      background: var(--mu-danger-color);
    }

    &[active] {
      background: var(--mu-danger-plus-color);
      border-color: var(--mu-danger-plus-color);
      box-shadow: $buttonActiveShadow var(--mu-danger-shadow-color);
    }

    &:hover {
      background: var(--mu-danger-minus-color);
      border-color: var(--mu-danger-minus-color);
      box-shadow: $buttonHoverShadow var(--mu-danger-shadow-color);
      color: $normalHighlightTextColor;
    }

    &[button-style="link"],
    &[button-style="text"],
    &[button-style="outline"] {
      color: var(--mu-danger-color);

      &[active] {
        color: var(--mu-danger-plus-color);
        background: var(--mu-danger-tiny-color);
      }

      &:hover {
        color: var(--mu-danger-minus-color);
      }
    }
  }

  &[button-style="text"] {
    box-shadow: none;
    border-color: transparent;
  }

  &[button-style="link"] {
    background: transparent !important;
    border-color: transparent !important;
  }

  &[button-style="text"],
  &[button-style="outline"] {
    background: transparent;

    &[active],
    &:hover {
      background: transparent;
    }
  }

  &[disabled] {
    color: $normalDisabledTextColor !important;
    text-decoration: none !important;
    box-shadow: none !important;
    cursor: default;

    &:not([button-style="link"]) {
      border-color: $normalDisabledBackground !important;
      background: $normalDisabledBackground !important;
    }
  }

  &.mu-icon-button,
  &:empty {
    width: $inputElementHeight;
    padding: 0;
  }

  & > .mu-icon + span,
  & > span + .mu-icon {
    margin-left: 4px;
  }
}

[button-shape="round"],
[button-shape="round"] > .mu-button {
  border-radius: $inputElementRoundRadius;
}

.mu-button-like {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;

  &:hover {
    color: var(--mu-primary-color);
    background: $normalTinyBackground;
  }
  &[active] {
    color: $normalHighlightTextColor;
    background: var(--mu-primary-color);
  }
}

[dark-mode] .mu-button-like {
  color: rgba(255, 255, 255, .8);

  &:hover {
    color: var(--mu-primary-color);
    background: $normalTinyBackground;
  }
}
